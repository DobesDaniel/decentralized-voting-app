{"version":3,"sources":["contractAddress.js","contractABI.js","NewVotingForm.js","VotingGrid.js","VotingDetail.js","App.js","reportWebVitals.js","index.js"],"names":["contractAddress","contractABI","inputs","internalType","name","type","outputs","stateMutability","components","NewVotingForm","_ref","onCancel","connectedAccount","title","setTitle","useState","startTime","setStartTime","endTime","setEndTime","options","setOptions","newOption","setNewOption","web3","useEffect","async","window","ethereum","Web3","console","error","loadWeb3","React","createElement","className","value","onChange","e","target","map","option","index","key","onClick","updatedOptions","splice","handleRemoveOption","handleAddOption","trim","Date","length","Set","toLowerCase","size","startTimestamp","Math","floor","getTime","timeLimit","contract","eth","Contract","methods","createVoting","send","from","VotingGrid","votings","onSelectVoting","reloadVotings","hoveredVoting","setHoveredVoting","showCreateForm","setShowCreateForm","hoveredVotingTimeLeft","setHoveredVotingTimeLeft","hoveredVotingTimer","setHoveredVotingTimer","calculateTimeLeft","voting","now","Number","start","timeUntilStart","days","hours","minutes","seconds","concat","timeLeft","timer","setInterval","clearInterval","id","onMouseEnter","onMouseLeave","handleCreateNewVotingClick","VotingDetail","onBack","selectedOptionId","setSelectedOptionId","voted","setVoted","votingStarted","setVotingStarted","votingEnded","setVotingEnded","autoRealodDelay","formatDateTime","timestamp","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","onLoad","hasStarted","call","hasEnded","alreadyVoted","hasVoted","getVotingOptions","setTimeout","autoLoadOnStart","timeUntilEnd","autoLoadOnEnd","String","vote_count","vote","App","setConnectedAccount","setVotings","selectedVoting","setSelectedVoting","request","method","accounts","getAccounts","getVotings","loadVotings","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.04ca9293.chunk.js","sourcesContent":["// contract Address - deployed on Injected Provider Metamask\r\n\r\nconst contractAddress = \"0xe030B8C9EB37eD54b79AB8E235Bff7b347C38280\";\r\n\r\nexport default contractAddress;\r\n","// contract ABI - deployed on Injected Provider Metamask\r\n\r\nconst contractABI = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_title\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[]\",\r\n\t\t\t\t\"name\": \"_optionTitles\",\r\n\t\t\t\t\"type\": \"string[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_start\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_timeLimit\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"createVoting\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getOptions\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"vote_count\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct VotingContract.Option[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_voting_id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getVotingOptions\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"vote_count\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct VotingContract.Option[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getVotings\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"start\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"timeLimit\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\t\t\"name\": \"option_ids\",\r\n\t\t\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\t\t\"name\": \"voted_addresses\",\r\n\t\t\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct VotingContract.Voting[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_voting_id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"hasEnded\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_voting_id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"hasStarted\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_voting_id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"voting_address\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"hasVoted\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_voting_id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_option_id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"vote\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n\r\nexport default contractABI;","import React, { useState, useEffect } from 'react';\r\nimport './NewVotingForm.css'; \r\nimport Web3 from 'web3';\r\nimport contractAddress from './contractAddress';\r\nimport contractABI from './contractABI';\r\n\r\nfunction NewVotingForm({ onCancel, connectedAccount}) {\r\n    const [title, setTitle] = useState('');\r\n    const [startTime, setStartTime] = useState('');\r\n    const [endTime, setEndTime] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [newOption, setNewOption] = useState('');\r\n\r\n    let web3;\r\n\r\n    useEffect(() => {\r\n        async function loadWeb3() {\r\n            if (window.ethereum) web3 = new Web3(window.ethereum);\r\n            else console.error('Please install MetaMask');\r\n        }\r\n        loadWeb3();\r\n    }, []);\r\n\r\n    const handleAddOption = () => {\r\n        if (newOption.trim() !== '') {\r\n            setOptions([...options, newOption.trim()]);\r\n            setNewOption('');\r\n        }\r\n    };\r\n\r\n    const handleRemoveOption = (index) => {\r\n      const updatedOptions = [...options];\r\n      updatedOptions.splice(index, 1);\r\n      setOptions(updatedOptions);\r\n    };\r\n\r\n    async function handleCreateVoting () {\r\n        if (!web3) {\r\n            if (window.ethereum) web3 = new Web3(window.ethereum);\r\n            else console.error('Please install MetaMask');\r\n        }\r\n\r\n        if (!title.trim()) {\r\n            console.error(\"Title cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if (!startTime) {\r\n            console.error(\"Start time must be selected\");\r\n            return;\r\n        }\r\n      \r\n        if (!endTime) {\r\n            console.error(\"End time must be selected\");\r\n            return;\r\n        }\r\n      \r\n        if (new Date(startTime) >= new Date(endTime)) {\r\n          console.error(\"Start time must be before end time\");\r\n          return;\r\n        }\r\n\r\n        if (new Date(startTime) <= new Date()) {\r\n            console.error(\"Start time must be in the future\");\r\n          return;\r\n        }\r\n      \r\n        if (options.length < 2) {\r\n          console.error(\"At least two options are required\");\r\n          return;\r\n        }\r\n      \r\n        const uniqueOptions = new Set(options.map(option => option.trim().toLowerCase()));\r\n        if (uniqueOptions.size !== options.length) {\r\n          console.error(\"Options must be unique\");\r\n          return;\r\n        }\r\n      \r\n        const startTimestamp = Math.floor(new Date(startTime).getTime() / 1000);\r\n        const endTimestamp = Math.floor(new Date(endTime).getTime() / 1000);\r\n\r\n        const timeLimit = endTimestamp - startTimestamp;\r\n  \r\n        const contract = new web3.eth.Contract(contractABI, contractAddress);\r\n        try {\r\n            await contract.methods.createVoting(title, options, startTimestamp, timeLimit).send({ from: connectedAccount });\r\n            onCancel()\r\n        } catch (error) {\r\n            console.error('Error voting:', error);\r\n        }\r\n\r\n    };\r\n   \r\n\r\n  return (\r\n    <div className=\"new-voting-form\">\r\n      <h1>Create New Voting</h1>\r\n      <div>\r\n        <label>Title:</label>\r\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Start Time:</label>\r\n        <input type=\"datetime-local\" value={startTime} onChange={(e) => setStartTime(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>End Time:</label>\r\n        <input type=\"datetime-local\" value={endTime} onChange={(e) => setEndTime(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Options:</label>\r\n        <div className=\"options-container\">\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"option-block remove-option\" onClick={() => handleRemoveOption(index)}>\r\n              <div className=\"option-title\">{option}</div>\r\n              remove\r\n            </div>\r\n          ))}\r\n          <div className=\"option-block add-option\" onClick={handleAddOption}>\r\n            <input type=\"text\" value={newOption} onChange={(e) => setNewOption(e.target.value)} />\r\n            add\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={onCancel}>Back</button>\r\n        <button onClick={handleCreateVoting}>Create</button>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewVotingForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './VotingGrid.css';\r\nimport NewVotingForm from './NewVotingForm';\r\n\r\nfunction VotingGrid({ votings, onSelectVoting, reloadVotings, connectedAccount }) {\r\n  const [hoveredVoting, setHoveredVoting] = useState(null);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [hoveredVotingTimeLeft, setHoveredVotingTimeLeft] = useState(null);\r\n  const [hoveredVotingTimer, setHoveredVotingTimer] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (hoveredVoting) {\r\n      setHoveredVotingTimeLeft(calculateTimeLeft(hoveredVoting));\r\n\r\n      const timer = setInterval(() => {\r\n        setHoveredVotingTimeLeft(calculateTimeLeft(hoveredVoting));\r\n      }, 1000);\r\n\r\n      setHoveredVotingTimer(timer);\r\n    }\r\n  }, [hoveredVoting]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(hoveredVotingTimer);\r\n    };\r\n  }, [hoveredVotingTimer]);\r\n\r\n  function calculateTimeLeft(voting) {\r\n    const now = Math.floor(Date.now() / 1000);\r\n    const startTime = Number(voting.start);\r\n    const endTime = startTime + Number(voting.timeLimit);\r\n\r\n    if (now < startTime) {\r\n        const timeUntilStart = startTime - now;\r\n        const days = Math.floor(timeUntilStart / (60 * 60 * 24));\r\n        const hours = Math.floor((timeUntilStart % (60 * 60 * 24)) / (60 * 60));\r\n        const minutes = Math.floor((timeUntilStart % (60 * 60)) / 60);\r\n        const seconds = timeUntilStart % 60;\r\n        return `Voting starts in ${days}d ${hours}h ${minutes}m ${seconds}s`;\r\n    } else if (now < endTime) {\r\n        const timeLeft = endTime - now;\r\n        const days = Math.floor(timeLeft / (60 * 60 * 24));\r\n        const hours = Math.floor((timeLeft % (60 * 60 * 24)) / (60 * 60));\r\n        const minutes = Math.floor((timeLeft % (60 * 60)) / 60);\r\n        const seconds = timeLeft % 60;\r\n        return `Voting ends in ${days}d ${hours}h ${minutes}m ${seconds}s`;\r\n    } else {\r\n        return \"Voting ended\";\r\n    }\r\n}\r\n\r\nconst handleCreateNewVotingClick = () => {\r\n    setShowCreateForm(true);\r\n  };\r\n\r\n  const handleCancelShowingCreateForm = () => {\r\n    reloadVotings();\r\n    setShowCreateForm(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showCreateForm ? (\r\n        <NewVotingForm onCancel={() => handleCancelShowingCreateForm()} connectedAccount={connectedAccount}/>\r\n      ) : (\r\n        <div className='vtoing-grid-wrapper'>\r\n        <div className=\"voting-grid\">\r\n          {votings.map((voting) => (\r\n            <div\r\n              key={voting.id}\r\n              className=\"voting-block\"\r\n              onClick={() => onSelectVoting(voting)}\r\n              onMouseEnter={() => {\r\n                setHoveredVoting(voting);\r\n              }}\r\n              onMouseLeave={() => {\r\n                setHoveredVoting(null);\r\n                setHoveredVotingTimeLeft(null);\r\n              }}\r\n            >\r\n              {hoveredVoting && voting.id === hoveredVoting.id ? (\r\n                <div className=\"time-left\">{hoveredVotingTimeLeft}</div>\r\n              ) : (\r\n                <h3>{voting.title}</h3>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {}\r\n          <div\r\n            className=\"voting-block create-new\"\r\n            onClick={handleCreateNewVotingClick}\r\n          >\r\n            <div className='add-voting'>+</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default VotingGrid;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './VotingDetail.css';\r\nimport Web3 from 'web3';\r\nimport contractAddress from './contractAddress';\r\nimport contractABI from './contractABI';\r\n\r\nfunction VotingDetail({ voting, onBack, connectedAccount }) {\r\n    const [options, setOptions] = useState([]);\r\n    const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n    const [voted, setVoted] = useState(false);\r\n    const [votingStarted, setVotingStarted] = useState(false);\r\n    const [votingEnded, setVotingEnded] = useState(false);\r\n    let web3;\r\n     // 60 seconds after votings starts/ends autoRealod happens\r\n    const autoRealodDelay = 60;\r\n\r\n    useEffect(() => {\r\n        async function loadWeb3() {\r\n            if (window.ethereum) web3 = new Web3(window.ethereum);\r\n            else console.error('Please install MetaMask');\r\n        }\r\n        loadWeb3();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function onLoad() {\r\n            if (!web3) {\r\n                if (window.ethereum) web3 = new Web3(window.ethereum);\r\n                else console.error('Please install MetaMask');\r\n            }\r\n            const contract = new web3.eth.Contract(contractABI, contractAddress);\r\n            const votingStarted = await contract.methods.hasStarted(voting.id).call();\r\n            setVotingStarted(votingStarted);\r\n\r\n            const votingEnded = await contract.methods.hasEnded(voting.id).call();\r\n            setVotingEnded(votingEnded);\r\n        \r\n            const alreadyVoted = await contract.methods.hasVoted(voting.id, connectedAccount).call({ from: connectedAccount });\r\n            setVoted(alreadyVoted);\r\n        \r\n            if (votingStarted) {\r\n                const options = await contract.methods.getVotingOptions(voting.id).call();\r\n                setOptions(options);\r\n            }\r\n        }\r\n\r\n        async function autoLoadOnStart() {\r\n            const now = Math.floor(Date.now() / 1000);\r\n            const start = Number(voting.start);\r\n            const timeUntilStart = start - now + autoRealodDelay;\r\n\r\n            if (timeUntilStart <= 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n    \r\n            setTimeout(() => {\r\n                onLoad();\r\n            }, timeUntilStart * 1000);\r\n        }\r\n    \r\n        async function autoLoadOnEnd() {\r\n            const now = Math.floor(Date.now() / 1000);\r\n            const end = Number(voting.start) + Number(voting.timeLimit);\r\n            const timeUntilEnd = end - now + autoRealodDelay;\r\n\r\n            if (timeUntilEnd <= 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n            \r\n            setTimeout(() => {\r\n                onLoad();\r\n            }, timeUntilEnd * 1000);\r\n        }\r\n    \r\n        onLoad();\r\n        autoLoadOnStart();\r\n        autoLoadOnEnd();\r\n    }, []);\r\n\r\n    async function vote() {\r\n        if (!web3) {\r\n            if (window.ethereum) web3 = new Web3(window.ethereum);\r\n            else console.error('Please install MetaMask');\r\n        }\r\n        if (!selectedOptionId) {\r\n            console.error('Please select an option.');\r\n            return;\r\n        }\r\n        const contract = new web3.eth.Contract(contractABI, contractAddress);\r\n        try {\r\n            await contract.methods.vote(voting.id, selectedOptionId).send({ from: connectedAccount });\r\n            setVoted(true);\r\n        } catch (error) {\r\n            console.error('Error voting:', error);\r\n        }\r\n    }\r\n\r\n    function formatDateTime(timestamp) {\r\n        const date = new Date(timestamp * 1000);\r\n        const options = {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: '2-digit',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit',\r\n        };\r\n        return new Intl.DateTimeFormat('en-US', options).format(date);\r\n      }\r\n\r\n    return (\r\n        <div className=\"voting-detail\">\r\n            {!votingEnded && votingStarted && (\r\n                <h1>Ongoing voting</h1>\r\n            )}\r\n             {!votingStarted && (\r\n                <h1>Voting has not started yet</h1>\r\n            )}\r\n             {votingEnded && (\r\n                <h1>Voting Ended</h1>\r\n            )}\r\n            <h2>{voting.title}</h2>\r\n            <p>Start Time: {formatDateTime(Number(voting.start))}</p>\r\n            <p>End Time: {formatDateTime(Number(voting.start) + Number(voting.timeLimit))}</p>\r\n        \r\n            <h3>Options:</h3>\r\n            {votingStarted && (\r\n                <div className=\"options-container\">\r\n                    {options.map((option) => (\r\n                        <div\r\n                            key={option.id}\r\n                            className={`option-block only-title ${selectedOptionId === option.id ? 'selected' : ''}`}\r\n                            onClick={() => setSelectedOptionId(option.id)}\r\n                        >\r\n                            <div className='option-title'>{option.title}</div>\r\n                            {(votingEnded || voted) && <div className='vote-count'>Votes: {String(option.vote_count)}</div>}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <div className='buttons'>\r\n                <button onClick={onBack}>Back</button>\r\n                {!votingEnded && !voted && votingStarted && (\r\n                    <button onClick={vote}>Vote</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingDetail;\r\n","\n\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport './App.css'; \nimport contractAddress from './contractAddress';\nimport contractABI from './contractABI';\nimport VotingGrid from './VotingGrid';\nimport VotingDetail from './VotingDetail';\n\n\nfunction App() {\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  const [votings, setVotings] = useState([]);\n  const [selectedVoting, setSelectedVoting] = useState(null);\n  let web3;\n\n  useEffect(() => {\n    async function loadWeb3() {\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const accounts = await web3.eth.getAccounts();\n          setConnectedAccount(accounts[0]);\n        } catch (error) {\n          console.error('User denied account access');\n        }\n      } else {\n        console.error('Please install MetaMask');\n      }\n    }\n    loadWeb3();\n  }, []);\n\n  useEffect(() => {\n    async function loadVotings() {\n      if (web3) {\n        const contract = new web3.eth.Contract(contractABI, contractAddress);\n        const votings = await contract.methods.getVotings().call();\n        setVotings(votings);\n      }\n    }\n    loadVotings();\n\n  }, [web3]);\n\n  async function realodVotings() {\n    if (!web3) {\n      if (window.ethereum) web3 = new Web3(window.ethereum);\n      else console.error('Please install MetaMask');\n    }\n    const contract = new web3.eth.Contract(contractABI, contractAddress);\n    const votings = await contract.methods.getVotings().call();\n    setVotings(votings);\n  }\n\n  return (\n    <div>\n      <div className=\"connected-account\">Connected Account: {connectedAccount}</div>\n  \n      {selectedVoting ? (\n        <VotingDetail \n          voting={selectedVoting} \n          onBack={() => setSelectedVoting(null)}\n          connectedAccount={connectedAccount} \n        />\n      ) : (\n        <VotingGrid \n          votings={votings} \n          onSelectVoting={(voting) => setSelectedVoting(voting)} \n          selectedVoting={selectedVoting}\n          reloadVotings={realodVotings}\n          connectedAccount={connectedAccount} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}